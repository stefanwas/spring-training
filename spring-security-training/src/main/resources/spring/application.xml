<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!--<import resource="datasource.xml" />-->

    <mvc:annotation-driven />
    <context:component-scan base-package="com.stefan.training.controller" />

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/Jsp/" />-->
        <!--<property name="suffix" value=".jsp" />-->
    <!--</bean>-->

    <!-- templateResolver allows to determine template file name & location base on view name (it's internal thymeleaf class) -->
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="templates/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>

    <!-- this defines templates  engine -->
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="additionalDialects">
            <list>
                <bean class="nz.net.ultraq.thymeleaf.LayoutDialect"/>
                <bean class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
            </list>
        </property>
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <!-- This is ViewResolver. Basend on view name returns View object. -->
    <bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="order" value="1"/>
        <property name="viewNames">
            <list>
                <value>*</value>
                <!--<value>js/*</value>-->
                <!--<value>templates/*</value>-->
            </list>
        </property>
    </bean>


</beans>